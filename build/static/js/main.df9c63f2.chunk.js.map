{"version":3,"sources":["app/store.ts","app/slices/app.ts","app/epics/app.ts","containers/errorboundary.tsx","containers/loader.tsx","containers/home.tsx","types/index.ts","const/config.ts","const/index.ts","utils/helpers.ts","app/program/api.ts","app/program/index.ts","hooks/useGame.ts","containers/words.tsx","containers/numbers.tsx","app/routes.tsx","App.tsx","index.tsx"],"names":["history","appSlice","createSlice","name","initialState","loggedIn","accessToken","reducers","setLoginState","state","payload","produce","draft","setGame","actions","combineEpics","action$","state$","pipe","ofType","appActions","switchMap","defer","Promise","resolve","empty","map","data","type","of","push","rootEpic","appEpic","createBrowserHistory","rootReducer","combineReducers","router","connectRouter","app","appReducer","epicMiddleware","createEpicMiddleware","store","configureStore","middleware","getDefaultMiddleware","routerMiddleware","reducer","run","ErrorBoundary","hasError","error","errorInfo","this","props","children","console","log","Component","className","CircularProgress","Typography","variant","color","GAME_TYPES","UserType","IDirection","IAxis","ITrackEvents","homeStyle","css","buttonStyle","wordsStyle","clsx","numbersStyle","speed","letter","size","font","alpha","container","width","height","radius","spacer","window","innerWidth","innerHeight","colors","wordsList","getRandom","maxHeight","letterSize","config","y","Math","floor","random","maxWidth","x","fromTwoValues","a","b","index","length","fromArray","array","numberString","min","max","numberStr","String","arrayStr","split","hasArrayDuplicate","Boolean","filter","item","indexOf","getArrayDuplicate","getBasePath","location","pathname","verticalAddOs","navigator","userAgent","includes","createLetter","draggable","text","Text","textAlign","textBaseline","getBounds","setBounds","box","createBox","Container","rectangle","Shape","graphics","beginFill","drawRoundRect","addChild","createAlpha","setMovement","shouldMove","complete","direction","POSITIVE","NEGATIVE","axis","X","Y","maxValue","getMaxRightPos","on","MOUSEDOWN","MOUSEUP","TICK","updatePosition","speak","word","speak$","next","Subject","value","concatMap","message","SpeechSynthesisUtterance","rate","pitch","volume","createMessage","speechSynthesis","onend","subscribe","newGame","stage","WORDS","letters","lettersArray","lettersComplete","dropInOrder","lastDroppedIndex","containerLetters","centerWidth","centerHeight","totalWidth","startLeftPos","left","setAlphaLettersPosition","movingLetters","movingText","snapCallback","drop","moving","centerX","centerY","completed","originalPosition","mouseDownRef","mouseMoveRef","MOUSEMOVE","e","event","stageX","stageY","top","right","bottom","intersects","off","mouseUpRef","setIntersectionObserver","findIndex","cont","removeChild","forEach","init","Stage","Touch","enable","Ticker","setFPS","addEventListener","canvasRef","useLayoutEffect","current","body","document","querySelector","getBoundingClientRect","Object","assign","initProgram","routes","path","component","useRef","dispatch","useDispatch","onClick","useCallback","useGame","NUMBERS","id","ref","Button","exact","currentTarget","dataset","data-type","route","key","AppContext","React","createContext","App","Provider","_window","oncontextmenu","selectstart","ReactDOM","render","StrictMode","basename","fallback","getElementById"],"mappings":"mMAoB2BA,E,qLCAdC,EAAWC,YAAY,CAClCC,KAAM,MACNC,aAX6B,CAC7BC,UAAU,EACVC,YAAa,IAUbC,SAAU,CACRC,cAAe,SACbC,EADa,GAGT,IADSH,EACV,EADDI,QAAWJ,YAEb,OAAOK,YAAQF,GAAO,SAACG,GACrBA,EAAMN,YAAcA,EACpBM,EAAMP,UAAW,MAGrBQ,QAAS,SAACJ,EAAD,GAAmD,EAAzCC,Y,EAImBT,EAASa,QAApCN,E,EAAAA,cAAeK,E,EAAAA,QAMfZ,IAAf,QCqBec,eArDuC,SAACC,EAASC,GAAV,OACpDD,EAAQE,KACNC,YAAOC,GACPC,aAAU,kBACRC,aAAM,kBAAMC,QAAQC,SAAQ,MAAON,KAAKG,aAAU,kBAAMI,yBAST,SAACT,EAASC,GAAV,OACnDD,EAAQE,KACNC,YAAOC,GACPM,aAAI,SAACC,GAAD,OAAWA,EAAsBjB,WACrCW,aAAU,SAACO,GAAD,OAAUC,YAAGC,YAAK,IAAD,OAAKF,YFV9BG,EAAWhB,YAAaiB,GAQjBhC,EAAUiC,cACjBC,GAPqBlC,EAOWA,EANpCmC,YAAgB,CACdC,OAAQC,YAAcrC,GACtBsC,IAAKC,KAQHC,EAAiBC,cAEVC,EAAQC,YAAe,CAClCC,WAAW,GAAD,mBACLC,eADK,CAERL,EACAM,YAAiB9C,KAEnB+C,QAASb,IAGXM,EAAeQ,IAAIjB,G,oCGTJkB,E,4MA1BbxC,MAAgB,CACdyC,UAAU,G,gEASMC,EAAYC,M,+BAO5B,OAAIC,KAAK5C,MAAMyC,SAEN,qDAGFG,KAAKC,MAAMC,Y,gDAlBYJ,GAG9B,OAFAK,QAAQC,IAAIN,GAEL,CAAED,UAAU,O,GARKQ,a,kBCFb,oBACb,yBAAKC,UAAU,iGACb,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAYC,QAAQ,SAASC,MAAM,UAAUJ,UAAU,QAAvD,gB,6nBCCJ,ICCYK,EAYAC,GAUAC,GAKAC,GAUAC,GDtCNC,GAAYC,YAAH,KAOTC,GAAcD,YAAH,KAYXE,GAAaC,YACjBF,GACAD,YAFsB,MAOlBI,GAAeD,YACnBF,GACAD,YAFwB,M,oBCzBdN,K,cAAAA,E,mBAAAA,M,cAYAC,K,cAAAA,E,aAAAA,Q,cAUAC,K,aAAAA,E,cAAAA,Q,cAKAC,K,MAAAA,E,OAAAA,Q,cAUAC,K,sBAAAA,E,kBAAAA,E,sBAAAA,E,aAAAA,Q,mEC9CG,IACbO,MAAO,EACPC,OAAQ,CACNC,KAAM,OACNC,KAAK,8JAGLf,MAAO,OACPgB,MAAO,IAGTC,UAAW,CACTC,MAAO,GACPC,OAAQ,GACRC,OAAQ,EACRC,OAAQ,IAGVC,OAAQ,CACNJ,MAAOI,OAAOC,WACdJ,OAAQG,OAAOE,cClBNC,GAAS,CACpB,MACA,SACA,SACA,QACA,OACA,SACA,SACA,OACA,QAyZWC,GAAS,CACpB,MACA,MACA,OACA,QACA,MACA,MACA,UACA,UACA,QACA,UACA,SACA,SACA,SACA,OACA,QACA,OACA,SAjBoB,OAtZJ,CAChvBR,OAAQ,SAACS,GACP,IAAMC,EAAaC,GAAOb,UAAUC,MAC9Ba,EAAIC,KAAKC,MAAMD,KAAKE,SAAWN,GACrC,OAAIG,EAAIF,GAAcD,EACbG,EAAIF,EAGNE,GAETb,MAAO,SAACiB,GACN,IAAMN,EAAaC,GAAOb,UAAUC,MAC9BkB,EAAIJ,KAAKC,MAAMD,KAAKE,SAAWC,GAErC,OAAIC,EAAIP,GAAcM,EACbC,EAAIP,EAGNO,GAETC,cAAe,SAACC,EAAQC,GAAT,OACbP,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,EAAII,EAAIC,GAC5CvC,MAAO,WACL,IAAMwC,EAAQR,KAAKC,MAAMD,KAAKE,SAAWT,GAAOgB,QAEhD,OAAOhB,GAAOe,IAEhBE,UAAW,SAACC,GAGV,OAAOA,EAFOX,KAAKC,MAAMD,KAAKE,SAAWS,EAAMF,UAIjDG,aAAc,SAACC,EAAaC,GAC1B,IAAMC,EAAYC,OAAOhB,KAAKc,IAAID,EAAKb,KAAKC,MAAMD,KAAKE,SAAWY,KAE5DG,EAAWF,EAAUG,MAAM,IAEjC,OAAIC,GAAkBF,GACbtB,GAAUiB,aAAaC,EAAKC,GAG9BC,IAmBEI,GAAoB,SAACR,GAAD,OAC/BS,QAJ+B,SAACT,GAAD,OAC/BA,EAAMU,QAAO,SAACC,EAAMd,GAAP,OAAiBG,EAAMY,QAAQD,KAAUd,KAG9CgB,CAAkBb,GAAOF,SAEtBgB,GAAc,kBAAMnC,OAAOoC,SAASC,UC1D3CC,GDyCAC,UAAUC,UAAUC,SAAS,YAI7BF,UAAUC,UAAUC,SAAS,WAHxB,EAOF,EChDIC,GAAe,SAACnD,GAAsC,IAAtBoD,IAAqB,yDAC1DC,EAAO,IAAIC,QACftD,EADW,UAERiB,GAAOjB,OAAOC,KAFN,YAEcgB,GAAOjB,OAAOE,MACvCe,GAAOjB,OAAOb,OAGhBkE,EAAKE,UAAY,SAEjBF,EAAKG,aAAe,SAEpBH,EAAK9B,GAAKN,GAAOb,UAAUC,MAAQgD,EAAKI,YAAYpD,OAAS,EAC7DgD,EAAKnC,EACHD,GAAOb,UAAUE,QAChBW,GAAOb,UAAUE,OAAS+C,EAAKI,YAAYnD,QAC5CyC,GAEFM,EAAK9H,KAAOyE,EAEZqD,EAAKK,UAAU,EAAG,EAAGzC,GAAOb,UAAUC,MAAOY,GAAOb,UAAUE,QAE9D+C,EAAKlE,MAAQiE,EAAYtC,GAAU3B,QAAU,OAE7C,IAAMwE,EAAMC,GAAUP,GAEtB,OAAOM,GAGIC,GAAY,SAACP,GACxB,IAAMjD,EAAY,IAAIyD,aAEdvD,EAAW+C,EAAKI,YAAhBnD,OAEFwD,EAAY,IAAIC,SAiBtB,OAhBAD,EAAUE,SACPC,UAAU,QACVC,cACC,EACA,EACAjD,GAAOb,UAAUC,MACjBC,EACAW,GAAOb,UAAUG,QAGrBH,EAAU7E,KAAO8H,EAAK9H,KAItB6E,EAAU+D,SAASL,EAAWT,GAEvBjD,GAGIgE,GAAc,SAACpE,GAC1B,IAAMqD,EAAOF,GAAanD,GAAQ,GAIlC,OAFAqD,EAAKlD,MAAQc,GAAOjB,OAAOG,MAEpBkD,GAsEIgB,GAAc,SAAChB,GAC1B,IAAIiB,GAAa,EACbC,GAAW,EAEflB,EAAKnC,EAAIJ,GAAUR,OAAOW,GAAOR,OAAOH,QACxC+C,EAAK9B,EAAIT,GAAUT,MAAMY,GAAOR,OAAOJ,OALiB,MArCjD,CAAEmE,UANS1D,GAAUU,cAC1BlC,GAAWmF,SACXnF,GAAWoF,UAIOC,KAFP7D,GAAUU,cAAcjC,GAAMqF,EAAGrF,GAAMsF,IA8C9CL,EAPkD,EAOlDA,UAAWG,EAPuC,EAOvCA,KAEXG,EACJH,IAASpF,GAAMsF,EACE5D,GAAOR,OAAOH,OAAQ+C,EAbnBI,YAAYnD,OAHb,SAACgB,EAAkBlB,GAAnB,OACrBkB,EAAWlB,EAAUqD,YAAYpD,MAgB3B0E,CAAe9D,GAAOR,OAAOJ,MAAOgD,GAU1C,OARAA,EAAK2B,GAAGxF,GAAayF,WAAW,kBAAOX,GAAa,KACpDjB,EAAK2B,GAAGxF,GAAa0F,SAAS,kBAAOZ,GAAa,KAClDjB,EAAK2B,GAAGxF,GAAa2F,MAAM,YACR,IAAbZ,GAAsBD,IACxBE,EApDiB,SACrBnB,EACAsB,EACAH,EACAM,GAEA,OAAIN,IAAclF,GAAWmF,SACvBpB,EAAKsB,GAAQ1D,GAAOlB,OAAS+E,GAC/BN,EAAYlF,GAAWoF,SACvBrB,EAAKsB,GAAQG,EACNN,IAGTnB,EAAKsB,IAAS1D,GAAOlB,MAEdyE,GAGLnB,EAAKsB,GAAQ1D,GAAOlB,OAAS,GAC/ByE,EAAYlF,GAAWmF,SACvBpB,EAAKsB,GAAQ,EACNH,IAGTnB,EAAKsB,IAAS1D,GAAOlB,MAEdyE,GA0BSY,CAAe/B,EAAMsB,EAAMH,EAAWM,OAI/C,WACLP,GAAW,IAkGFc,GAAQ,SAACC,GAAD,OACnB,IAAI3I,SAAQ,SAACC,GACX2I,GAAOC,KAAK,CACVF,OACA1I,gBAIA2I,GAAS,IAAIE,KAMnBF,GACGjJ,KACCQ,aAAI,SAAC4I,GAAD,OAAWA,KACfC,cAAU,YAAwB,IAArBL,EAAoB,EAApBA,KAAM1I,EAAc,EAAdA,QACXgJ,EA3BU,SAACN,GACrB,IAAMM,EAAU,IAAIC,yBAMpB,OALAD,EAAQE,KAAO,EACfF,EAAQG,MAAQ,EAChBH,EAAQI,OAAS,EACjBJ,EAAQvC,KAAOiC,EAERM,EAoBaK,CAAcX,GAK9B,OAJA7E,OAAOyF,gBAAgBb,MAAMO,GAE7BA,EAAQO,MAAQ,kBAAMvJ,KAEfK,YAAGqI,OAGbc,YC9QH,IAAMC,GAAU,SAAVA,EAAWrJ,EAAkBsJ,GACjC,IAAMhB,EACJlG,EAAWmH,QAAUvJ,EACjB8D,GAAUe,UAAUhB,IACpBC,GAAUiB,aAAa,EAAG,IAE1ByE,EAAUlB,EAAKjD,MAAM,IACrBoE,EAAeD,EAAQ1J,IAAIsH,IAE7BsC,EAAkB,EAElBC,GAAc,EACdC,GAAoB,EAQlBC,EDoC+B,SAACL,GACtC,IAAMM,EAAc3F,KAAKC,MAAMH,GAAOR,OAAOJ,MAAQ,GAC/C0G,EAAe5F,KAAKC,MAAMH,GAAOR,OAAOH,OAAS,GAEjD0G,EACJ/F,GAAOb,UAAUC,MAAQmG,EAAQ5E,QAChC4E,EAAQ5E,OAAS,GAAKX,GAAOb,UAAUI,OAEtCyG,EAAeH,EAAc7F,GAAOb,UAAUC,MAAQ2G,EAAa,EAEvE,OAAOR,EAAQ1J,KAAI,SAACkD,EAAQ2B,GAC1B,IAAMuF,EACJD,EAAehG,GAAOb,UAAUC,MAAQY,GAAOb,UAAUI,OAO3D,OALAR,EAAOuB,EAAI2F,EACXlH,EAAOkB,EAAI6F,EAEXE,EAAeC,EAERlH,KCvDgBmH,CAAwBV,GAAc3J,KAC7D,SAACkD,GAGC,OAFAsG,EAAMnC,SAASnE,GAERA,KAILoH,EAAgBZ,EAAQ1J,KAAI,SAACkD,EAAQ2B,GACzC,IAAM0F,EAAalE,GAAanD,GAE1BsH,EAAejD,GAAYgD,GA0BjC,OAxBAf,EAAMnC,SAASkD,GDsIoB,SACrCE,EACAC,EACAF,GAEA,IAAMG,EAAUF,EAAKhG,EAAIgG,EAAK9D,YAAYpD,MAAQ,EAC5CqH,EAAUH,EAAKrG,EAAIqG,EAAK9D,YAAYnD,OAAS,EAE/CqH,GAAY,EAEVC,EAAmB,CACvBrG,EAAG,EACHL,EAAG,GAiDC2G,EAAeL,EAAOxC,GAAGxF,GAAayF,WAL1B,WAChB2C,EAAiBrG,EAAIiG,EAAOjG,EAC5BqG,EAAiB1G,EAAIsG,EAAOtG,KAIxB4G,EAAeN,EAAOxC,GAAGxF,GAAauI,WA/C1B,SAACC,GACjB,IAAIL,EAAJ,CAIA,IAAMM,EAAQD,EAEdR,EAAOjG,EAAI0G,EAAMC,OACjBV,EAAOtG,EAAI+G,EAAME,OApCF,SAAC,EAA+BX,GAAuB,IAApDC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,QACvBR,EAAOM,EAAOjG,EACd6G,EAAMZ,EAAOtG,EACbmH,EAAQb,EAAOjG,EAAIiG,EAAO/D,YAAYpD,MACtCiI,EAASd,EAAOtG,EAAIsG,EAAO/D,YAAYnD,OAE7C,OACE4G,GAAQO,GAAWY,GAASZ,GAAWW,GAAOV,GAAWY,GAAUZ,EA+B/Da,CAAW,CAAEd,UAASC,WAAWF,KACnCA,EAAOjG,EAAIgG,EAAKhG,EAChBiG,EAAOtG,EAAIqG,EAAKrG,EAEhByG,GAAY,EACZH,EAAOgB,IAAIhJ,GAAauI,UAAWD,GACnCN,EAAOgB,IAAIhJ,GAAayF,UAAW4C,QAgCjCY,EAAajB,EAAOxC,GAAGxF,GAAa0F,SA5B1B,SAAC8C,GACf,IAAMC,EAAQD,EAKd,GAHAR,EAAOjG,EAAI0G,EAAMC,OACjBV,EAAOtG,EAAI+G,EAAME,OAEbR,EAQF,OAPAH,EAAOjG,EAAIgG,EAAKhG,EAChBiG,EAAOtG,EAAIqG,EAAKrG,EAEhBsG,EAAOgB,IAAIhJ,GAAa0F,QAASuD,GACjCpD,GAAMmC,EAAOjM,WAEb+L,EAAaC,EAAMC,GAIrBA,EAAOjG,EAAIqG,EAAiBrG,EAC5BiG,EAAOtG,EAAI0G,EAAiB1G,KCzL5BwH,CACE7B,EAAiBlF,GACjB0F,GACA,SAACE,EAAMC,GACL,IAAM7F,EAAQkF,EAAiB8B,WAAU,SAACC,GAAD,OAAUA,IAASrB,KAExDX,EAAmBjF,IACrBgF,GAAc,GAGhBC,EAAmBjF,EAEnB4F,EAAKpH,MAAQ,EACbmG,EAAMuC,YAAYrB,GAElBF,MACAZ,IApCoBF,EAAQ5E,QAC9B2C,OAyCK8C,KAGH9C,EAAQ,yCAAG,uBAAA9C,EAAA,6DACVkF,GACHH,EAAQsC,QAAQzD,IAFH,SAKTA,GAAMC,GALG,OAOfuB,EAAiBiC,SAAQ,SAAC9I,GAAD,OAAYsG,EAAMuC,YAAY7I,MACvDoH,EAAc0B,SAAQ,SAAC9I,GAAD,OAAYsG,EAAMuC,YAAY7I,MAEpDqG,EAAQrJ,EAAMsJ,GAVC,2CAAH,sDAgCDyC,OAlBf,SAAc/L,GACZ,IAAMsJ,EAAQ,IAAI0C,SAAM,UAExBC,SAAMC,OAAO5C,GAEbD,GAAQrJ,EAAMsJ,GASd6C,UAAOC,OAAO,IACdD,UAAOE,iBAAiB,OAAQ/C,IChGnB,YACbtJ,EACAsM,GAEAC,2BAAgB,WACd,GAAID,EAAUE,QAAS,CACrB,IAAMC,EAAOC,SAASC,cAAc,QAEpC,GAAIF,EAAM,CAAC,IAAD,EACkBA,EAAKG,wBAAvBtJ,EADA,EACAA,OAAQD,EADR,EACQA,MAEhBwJ,OAAOC,OAAO7I,GAAOR,OAAQ,CAAEH,SAAQD,UAEvCiJ,EAAUE,QAAQlJ,OAASA,EAC3BgJ,EAAUE,QAAQnJ,MAAQA,GAI9B0J,GAAY/M,KACX,K,uIChBU,IA0BT2C,GAAcD,YAAH,M,uIC1BF,IA0BTC,GAAcD,YAAH,MCnBXsK,GAAkB,CACtB,CACEC,KAAK,WACLC,UDVW,WACb,IAAMZ,EAAYa,iBAA0B,MAEtCC,EAAWC,cAEXC,EAAUC,uBAAY,WAC1BH,EAASlN,YAAK,QACb,CAACkN,IAIJ,OAFAI,GAAQpL,EAAWqL,QAASnB,GAG1B,oCACE,4BAAQoB,GAAG,SAASC,IAAKrB,IACzB,kBAACsB,GAAA,EAAD,CACE1L,QAAQ,YACRC,MAAM,UACNmL,QAASA,EACTvL,UAAWY,IAJb,WCFJ,CACEsK,KAAK,SACLC,UFdW,WACb,IAAMZ,EAAYa,iBAA0B,MAEtCC,EAAWC,cAEXC,EAAUC,uBAAY,WAC1BH,EAASlN,YAAK,QACb,CAACkN,IAIJ,OAFAI,GAAQpL,EAAWmH,MAAO+C,GAGxB,oCACE,4BAAQoB,GAAG,SAASC,IAAKrB,IACzB,kBAACsB,GAAA,EAAD,CACE1L,QAAQ,YACRC,MAAM,UACNmL,QAASA,EACTvL,UAAWY,IAJb,WEEJ,CACEkL,OAAO,EACPZ,KAbarH,KAcbsH,UVWW,WACb,IAAME,EAAWC,cAEXC,EAAUC,uBACd,SAACtC,GACC,IAAMjL,EAAOiL,EAAM6C,cAAcC,QAAQ/N,KAEzCoN,EAAS5N,EAAmBQ,MAE9B,CAACoN,IAGH,OACE,yBAAKrL,UAAWU,IACd,yBAAKV,UAAWa,GAAY0K,QAASA,EAASU,YAAU,SAAxD,SAGA,yBAAKjM,UAAWe,GAAcwK,QAASA,EAASU,YAAU,WAA1D,eUxBS,qBACb,oCACGhB,GAAOlN,KAAI,SAACmO,GAAD,OACV,kBAAC,IAAD,eAAOC,IAAKD,EAAMhB,MAAUgB,SC9BrBE,GAAaC,IAAMC,cAA2B,IAU5CC,GARO,WACpB,OACE,kBAACH,GAAWI,SAAZ,CAAqB7F,MAAO,IAC1B,kBAAC,GAAD,QCKA8F,I,MAAU/K,QAEhB+K,GAAQC,cAAgB,kBAAM,GAC9BD,GAAQE,YAAc,kBAAM,GAE5BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAeC,SAAUlJ,MACvB,kBAAC,IAAD,CAAU9E,MAAOA,GACf,kBAAC,IAAD,CAAiB1C,QAASA,GACxB,kBAAC,WAAD,CAAU2Q,SAAU,kBAAC,EAAD,OAClB,kBAAC,GAAD,YAOZrC,SAASsC,eAAe,W","file":"static/js/main.df9c63f2.chunk.js","sourcesContent":["import {\r\n  Action,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  ThunkAction,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\nimport { createBrowserHistory, History } from 'history';\r\nimport { useDispatch } from 'react-redux';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { combineEpics, createEpicMiddleware } from 'redux-observable';\r\n\r\nimport appEpic from './epics/app';\r\nimport appReducer from './slices/app';\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n\r\nconst rootEpic = combineEpics(appEpic);\r\n\r\nconst createRootReducer = (history: History<any>) =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    app: appReducer,\r\n  });\r\n\r\nexport const history = createBrowserHistory();\r\nconst rootReducer = createRootReducer(history);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nconst epicMiddleware = createEpicMiddleware<Action, Action, RootState>();\r\n\r\nexport const store = configureStore({\r\n  middleware: [\r\n    ...getDefaultMiddleware(),\r\n    epicMiddleware,\r\n    routerMiddleware(history),\r\n  ],\r\n  reducer: rootReducer,\r\n});\r\n\r\nepicMiddleware.run(rootEpic);\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from 'app/store';\r\n\r\nimport produce from 'immer';\r\nimport { GAME_TYPES } from 'types';\r\n\r\ninterface AppState {\r\n  loggedIn: boolean;\r\n  accessToken: string;\r\n}\r\n\r\nconst initialState: AppState = {\r\n  loggedIn: false,\r\n  accessToken: '',\r\n};\r\n\r\ninterface ISetLoginStateArgs {\r\n  accessToken: string;\r\n}\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    setLoginState: (\r\n      state,\r\n      { payload: { accessToken } }: PayloadAction<ISetLoginStateArgs>\r\n    ) => {\r\n      return produce(state, (draft) => {\r\n        draft.accessToken = accessToken;\r\n        draft.loggedIn = true;\r\n      });\r\n    },\r\n    setGame: (state, { payload }: PayloadAction<GAME_TYPES>) => {},\r\n  },\r\n});\r\n\r\nexport const { setLoginState, setGame } = appSlice.actions;\r\n\r\nexport const get = {\r\n  loggedIn: (state: RootState) => state.app.loggedIn,\r\n};\r\n\r\nexport default appSlice.reducer;\r\n","import { Action } from '@reduxjs/toolkit';\r\nimport { RootState } from 'app/store';\r\nimport { push } from 'connected-react-router';\r\n\r\nimport { combineEpics, Epic, ofType } from 'redux-observable';\r\nimport { of, defer, empty } from 'rxjs';\r\nimport { switchMap, map } from 'rxjs/operators';\r\n\r\nimport * as appActions from 'app/slices/app';\r\nimport { GAME_TYPES } from 'types';\r\n\r\nconst setLoginEpic: Epic<Action, Action, RootState> = (action$, state$) =>\r\n  action$.pipe(\r\n    ofType(appActions.setLoginState),\r\n    switchMap(() =>\r\n      defer(() => Promise.resolve(true)).pipe(switchMap(() => empty()))\r\n    )\r\n  );\r\n\r\ninterface ISetGameArgs {\r\n  type: string;\r\n  payload: GAME_TYPES;\r\n}\r\n\r\nconst setGameEpic: Epic<Action, Action, RootState> = (action$, state$) =>\r\n  action$.pipe(\r\n    ofType(appActions.setGame),\r\n    map((data) => (data as ISetGameArgs).payload),\r\n    switchMap((type) => of(push(`/${type}`)))\r\n  );\r\n\r\n/*\r\nSample page redirection after triggering an action\r\n\r\nconst setPagesEpic: Epic<Action, Action, RootState> = (action$, state$) =>\r\n  action$.pipe(\r\n    ofType(appActions.setPages),\r\n    switchMap(() => of(push('/pages')))\r\n  );\r\n\r\n\r\nSample\r\nconst setPageIdEpic: Epic<Action, Action, RootState> = (action$, state$) =>\r\n  action$.pipe(\r\n    ofType(appActions.setPageId),\r\n    switchMap(() =>\r\n      defer(() => {\r\n        const { pageId, pageAccessToken: accessToken } = state$.value.app;\r\n\r\n        if (!isEmpty(pageId)) {\r\n          return fbApi.getLiveVideos(pageId, accessToken);\r\n        }\r\n\r\n        return [];\r\n      }).pipe(\r\n        switchMap((liveVideos) => {\r\n          return of(appActions.setLiveVideos(liveVideos));\r\n        })\r\n      )\r\n    )\r\n  );\r\n\r\n*/\r\n\r\nexport default combineEpics(setLoginEpic, setGameEpic);\r\n","import React, { Component } from 'react';\r\n\r\ninterface IState {\r\n  hasError: boolean;\r\n}\r\n\r\nclass ErrorBoundary extends Component {\r\n  state: IState = {\r\n    hasError: false,\r\n  };\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    console.log(error);\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error: any, errorInfo: any) {\r\n    // You can also log the error to an error reporting service\r\n    // logErrorToMyService(error, errorInfo);\r\n    // console.error(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default () => (\r\n  <div className=\"absolute top-0 h-full w-full flex justify-center items-center bg-black bg-opacity-50 flex-col\">\r\n    <CircularProgress />\r\n    <Typography variant=\"button\" color=\"inherit\" className=\"pt-4\">\r\n      Loading...\r\n    </Typography>\r\n  </div>\r\n);\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { css } from 'emotion';\r\nimport clsx from 'clsx';\r\n\r\nimport * as appActions from 'app/slices/app';\r\nimport { GAME_TYPES } from 'types';\r\n\r\nconst homeStyle = css`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  height: 100%;\r\n`;\r\n\r\nconst buttonStyle = css`\r\n  font-size: 30px;\r\n  border: 2px solid #fff;\r\n  cursor: pointer;\r\n  padding: 2vh 2vw;\r\n  border-radius: 8px;\r\n\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst wordsStyle = clsx(\r\n  buttonStyle,\r\n  css`\r\n    background-color: navajowhite;\r\n  `\r\n);\r\n\r\nconst numbersStyle = clsx(\r\n  buttonStyle,\r\n  css`\r\n    background-color: rgb(72 209 204);\r\n  `\r\n);\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick = useCallback(\r\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n      const type = event.currentTarget.dataset.type as GAME_TYPES;\r\n\r\n      dispatch(appActions.setGame(type));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <div className={homeStyle}>\r\n      <div className={wordsStyle} onClick={onClick} data-type=\"words\">\r\n        Words\r\n      </div>\r\n      <div className={numbersStyle} onClick={onClick} data-type=\"numbers\">\r\n        Numbers\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","declare global {\r\n  interface Window {\r\n    test: any;\r\n    FB: {\r\n      init: Function;\r\n    };\r\n  }\r\n}\r\n\r\nexport enum GAME_TYPES {\r\n  WORDS = 'words',\r\n  NUMBERS = 'numbers',\r\n}\r\n\r\nexport type userId = string;\r\n\r\nexport interface UserInfo {\r\n  name: string;\r\n  type: UserType;\r\n}\r\n\r\nexport enum UserType {\r\n  ADMIN = 'admin',\r\n  USER = 'user',\r\n}\r\n\r\nexport interface ICanvasSize {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport enum IDirection {\r\n  POSITIVE = '+',\r\n  NEGATIVE = '-',\r\n}\r\n\r\nexport enum IAxis {\r\n  Y = 'y',\r\n  X = 'x',\r\n}\r\n\r\nexport interface IMovement {\r\n  axis: IAxis;\r\n  direction: IDirection;\r\n}\r\n\r\nexport enum ITrackEvents {\r\n  MOUSEDOWN = 'mousedown',\r\n  MOUSEUP = 'pressup',\r\n  MOUSEMOVE = 'pressmove',\r\n  TICK = 'tick',\r\n}\r\n","export default {\n  speed: 1,\n  letter: {\n    size: '60px',\n    font: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif`,\n    color: '#000',\n    alpha: 0.3,\n  },\n\n  container: {\n    width: 60,\n    height: 60,\n    radius: 5,\n    spacer: 10,\n  },\n\n  window: {\n    width: window.innerWidth,\n    height: window.innerHeight,\n  },\n};\n","export const EMPTY = '';\r\n\r\nexport const colors = [\r\n  'red',\r\n  'orange',\r\n  'yellow',\r\n  'green',\r\n  'blue',\r\n  'indigo',\r\n  'violet',\r\n  'pink',\r\n  'gray',\r\n];\r\n\r\nconst letters_4 = [\r\n  'ABLE',\r\n  'ACID',\r\n  'AGED',\r\n  'ALSO',\r\n  'ARMY',\r\n  'BACK',\r\n  'BAND',\r\n  'BANK',\r\n  'BASE',\r\n  'BATH',\r\n  'BEAR',\r\n  'BEAT',\r\n  'BELT',\r\n  'BEST',\r\n  'BIRD',\r\n  'BLOW',\r\n  'BLUE',\r\n  'BOAT',\r\n  'BODY',\r\n  'BOND',\r\n  'BONE',\r\n  'BORN',\r\n  'BOTH',\r\n  'BOWL',\r\n  'BULK',\r\n  'BURN',\r\n  'BUSH',\r\n  'BUSY',\r\n  'CALM',\r\n  'CAME',\r\n  'CAMP',\r\n  'CARD',\r\n  'CARE',\r\n  'CASE',\r\n  'CASH',\r\n  'CAST',\r\n  'CHAT',\r\n  'CHIP',\r\n  'CITY',\r\n  'CLUB',\r\n  'COAL',\r\n  'COAT',\r\n  'CODE',\r\n  'COLD',\r\n  'COME',\r\n  'COPE',\r\n  'COPY',\r\n  'CORE',\r\n  'COST',\r\n  'CREW',\r\n  'CROP',\r\n  'DARK',\r\n  'DATE',\r\n  'DAWN',\r\n  'DAYS',\r\n  'DEAL',\r\n  'DEAN',\r\n  'DEAR',\r\n  'DEBT',\r\n  'DENY',\r\n  'DESK',\r\n  'DIAL',\r\n  'DICK',\r\n  'DIET',\r\n  'DISC',\r\n  'DISK',\r\n  'DOES',\r\n  'DONE',\r\n  'DOSE',\r\n  'DOWN',\r\n  'DRAW',\r\n  'DREW',\r\n  'DROP',\r\n  'DRUG',\r\n  'DUAL',\r\n  'DUKE',\r\n  'DUST',\r\n  'DUTY',\r\n  'EACH',\r\n  'EARN',\r\n  'EAST',\r\n  'EASY',\r\n  'EVIL',\r\n  'EXIT',\r\n  'FACE',\r\n  'FACT',\r\n  'FAIL',\r\n  'FAIR',\r\n  'FARM',\r\n  'FAST',\r\n  'FATE',\r\n  'FEAR',\r\n  'FELT',\r\n  'FILE',\r\n  'FILM',\r\n  'FIND',\r\n  'FINE',\r\n  'FIRE',\r\n  'FIRM',\r\n  'FISH',\r\n  'FIVE',\r\n  'FLAT',\r\n  'FLOW',\r\n  'FORD',\r\n  'FORM',\r\n  'FORT',\r\n  'FOUR',\r\n  'FROM',\r\n  'FUEL',\r\n  'FUND',\r\n  'GAIN',\r\n  'GAME',\r\n  'GATE',\r\n  'GAVE',\r\n  'GEAR',\r\n  'GIFT',\r\n  'GIRL',\r\n  'GIVE',\r\n  'GLAD',\r\n  'GOAL',\r\n  'GOES',\r\n  'GOLD',\r\n  'GOLF',\r\n  'GONE',\r\n  'GRAY',\r\n  'GREW',\r\n  'GREY',\r\n  'GROW',\r\n  'GULF',\r\n  'HAIR',\r\n  'HALF',\r\n  'HAND',\r\n  'HANG',\r\n  'HARD',\r\n  'HARM',\r\n  'HATE',\r\n  'HAVE',\r\n  'HEAD',\r\n  'HEAR',\r\n  'HEAT',\r\n  'HELD',\r\n  'HELP',\r\n  'HERO',\r\n  'HIRE',\r\n  'HOLD',\r\n  'HOLE',\r\n  'HOLY',\r\n  'HOME',\r\n  'HOPE',\r\n  'HOST',\r\n  'HOUR',\r\n  'HUGE',\r\n  'HUNG',\r\n  'HUNT',\r\n  'HURT',\r\n  'IDEA',\r\n  'INCH',\r\n  'INTO',\r\n  'IRON',\r\n  'ITEM',\r\n  'JACK',\r\n  'JANE',\r\n  'JEAN',\r\n  'JOHN',\r\n  'JOIN',\r\n  'JUMP',\r\n  'JURY',\r\n  'JUST',\r\n  'KENT',\r\n  'KEPT',\r\n  'KIND',\r\n  'KING',\r\n  'KNEW',\r\n  'KNOW',\r\n  'LACK',\r\n  'LADY',\r\n  'LAID',\r\n  'LAKE',\r\n  'LAND',\r\n  'LANE',\r\n  'LAST',\r\n  'LATE',\r\n  'LEAD',\r\n  'LEFT',\r\n  'LIFE',\r\n  'LIFT',\r\n  'LIKE',\r\n  'LINE',\r\n  'LINK',\r\n  'LIST',\r\n  'LIVE',\r\n  'LOAD',\r\n  'LOAN',\r\n  'LOCK',\r\n  'LONG',\r\n  'LORD',\r\n  'LOSE',\r\n  'LOST',\r\n  'LOVE',\r\n  'LUCK',\r\n  'MADE',\r\n  'MAIL',\r\n  'MAIN',\r\n  'MAKE',\r\n  'MALE',\r\n  'MANY',\r\n  'MARK',\r\n  'MEAL',\r\n  'MEAN',\r\n  'MEAT',\r\n  'MENU',\r\n  'MIKE',\r\n  'MILE',\r\n  'MILK',\r\n  'MIND',\r\n  'MINE',\r\n  'MODE',\r\n  'MORE',\r\n  'MOST',\r\n  'MOVE',\r\n  'MUCH',\r\n  'MUST',\r\n  'NAME',\r\n  'NAVY',\r\n  'NEAR',\r\n  'NECK',\r\n  'NEWS',\r\n  'NEXT',\r\n  'NICE',\r\n  'NICK',\r\n  'NOSE',\r\n  'NOTE',\r\n  'OKAY',\r\n  'ONCE',\r\n  'ONLY',\r\n  'OPEN',\r\n  'ORAL',\r\n  'OVER',\r\n  'PACE',\r\n  'PACK',\r\n  'PAGE',\r\n  'PAID',\r\n  'PAIN',\r\n  'PAIR',\r\n  'PALM',\r\n  'PARK',\r\n  'PART',\r\n  'PAST',\r\n  'PATH',\r\n  'PEAK',\r\n  'PICK',\r\n  'PINK',\r\n  'PLAN',\r\n  'PLAY',\r\n  'PLOT',\r\n  'PLUG',\r\n  'PLUS',\r\n  'PORT',\r\n  'POST',\r\n  'PURE',\r\n  'PUSH',\r\n  'RACE',\r\n  'RAIL',\r\n  'RAIN',\r\n  'RANK',\r\n  'RATE',\r\n  'READ',\r\n  'REAL',\r\n  'RELY',\r\n  'RENT',\r\n  'REST',\r\n  'RICE',\r\n  'RICH',\r\n  'RIDE',\r\n  'RING',\r\n  'RISE',\r\n  'RISK',\r\n  'ROAD',\r\n  'ROCK',\r\n  'ROLE',\r\n  'ROSE',\r\n  'RULE',\r\n  'RUSH',\r\n  'RUTH',\r\n  'SAFE',\r\n  'SAID',\r\n  'SAKE',\r\n  'SALE',\r\n  'SALT',\r\n  'SAME',\r\n  'SAND',\r\n  'SAVE',\r\n  'SEAT',\r\n  'SELF',\r\n  'SEND',\r\n  'SENT',\r\n  'SEPT',\r\n  'SHIP',\r\n  'SHOP',\r\n  'SHOT',\r\n  'SHOW',\r\n  'SHUT',\r\n  'SICK',\r\n  'SIDE',\r\n  'SIGN',\r\n  'SITE',\r\n  'SIZE',\r\n  'SKIN',\r\n  'SLIP',\r\n  'SLOW',\r\n  'SNOW',\r\n  'SOFT',\r\n  'SOIL',\r\n  'SOLD',\r\n  'SOLE',\r\n  'SOME',\r\n  'SONG',\r\n  'SORT',\r\n  'SOUL',\r\n  'SPOT',\r\n  'STAR',\r\n  'STAY',\r\n  'STEP',\r\n  'STOP',\r\n  'SUCH',\r\n  'SUIT',\r\n  'SURE',\r\n  'TAKE',\r\n  'TALE',\r\n  'TALK',\r\n  'TANK',\r\n  'TAPE',\r\n  'TASK',\r\n  'TEAM',\r\n  'TECH',\r\n  'TEND',\r\n  'TERM',\r\n  'THAN',\r\n  'THEM',\r\n  'THEN',\r\n  'THEY',\r\n  'THIN',\r\n  'THIS',\r\n  'THUS',\r\n  'TIME',\r\n  'TINY',\r\n  'TOLD',\r\n  'TONE',\r\n  'TONY',\r\n  'TOUR',\r\n  'TOWN',\r\n  'TRIP',\r\n  'TRUE',\r\n  'TUNE',\r\n  'TURN',\r\n  'TWIN',\r\n  'TYPE',\r\n  'UNIT',\r\n  'UPON',\r\n  'USED',\r\n  'USER',\r\n  'VARY',\r\n  'VAST',\r\n  'VERY',\r\n  'VICE',\r\n  'VIEW',\r\n  'VOTE',\r\n  'WAGE',\r\n  'WAIT',\r\n  'WAKE',\r\n  'WALK',\r\n  'WANT',\r\n  'WARD',\r\n  'WARM',\r\n  'WASH',\r\n  'WAVE',\r\n  'WAYS',\r\n  'WEAK',\r\n  'WEAR',\r\n  'WENT',\r\n  'WEST',\r\n  'WHAT',\r\n  'WHEN',\r\n  'WHOM',\r\n  'WIDE',\r\n  'WIFE',\r\n  'WILD',\r\n  'WIND',\r\n  'WINE',\r\n  'WING',\r\n  'WIRE',\r\n  'WISE',\r\n  'WISH',\r\n  'WITH',\r\n  'WORD',\r\n  'WORE',\r\n  'WORK',\r\n  'YARD',\r\n  'YEAH',\r\n  'YEAR',\r\n  'YOUR',\r\n  'ZERO',\r\n  'ZONE',\r\n];\r\n\r\nexport const wordsList = [\r\n  'DOG',\r\n  'COW',\r\n  'BIRD',\r\n  'MOUSE',\r\n  'PIG',\r\n  'HEN',\r\n  'CHICKEN',\r\n  'GIRAFFE',\r\n  'HIPPO',\r\n  'ELPHANT',\r\n  'PARROT',\r\n  'LIZARD',\r\n  'MONKEY',\r\n  'GOAT',\r\n  'SHEEP',\r\n  'FISH',\r\n  'SHARK',\r\n  ...letters_4,\r\n];\r\n","import config from 'const/config';\nimport { colors } from 'const';\n\nexport const getRandom = {\n  height: (maxHeight: number) => {\n    const letterSize = config.container.width;\n    const y = Math.floor(Math.random() * maxHeight);\n    if (y + letterSize >= maxHeight) {\n      return y - letterSize;\n    }\n\n    return y;\n  },\n  width: (maxWidth: number) => {\n    const letterSize = config.container.width;\n    const x = Math.floor(Math.random() * maxWidth);\n\n    if (x + letterSize >= maxWidth) {\n      return x - letterSize;\n    }\n\n    return x;\n  },\n  fromTwoValues: (a: any, b: any) =>\n    Math.floor(Math.random() * 333) % 2 ? a : b,\n  color: () => {\n    const index = Math.floor(Math.random() * colors.length);\n\n    return colors[index];\n  },\n  fromArray: (array: any[]) => {\n    const index = Math.floor(Math.random() * array.length);\n\n    return array[index];\n  },\n  numberString: (min: number, max: number): string => {\n    const numberStr = String(Math.max(min, Math.floor(Math.random() * max)));\n\n    const arrayStr = numberStr.split('');\n\n    if (hasArrayDuplicate(arrayStr)) {\n      return getRandom.numberString(min, max);\n    }\n\n    return numberStr;\n  },\n};\n\nexport const getVerticalAddOs = () => {\n  if (navigator.userAgent.includes('Windows')) {\n    return 0;\n  }\n\n  if (navigator.userAgent.includes('Android')) {\n    return 0;\n  }\n\n  return 5;\n};\n\nexport const getArrayDuplicate = (array: any[]) =>\n  array.filter((item, index) => array.indexOf(item) !== index);\n\nexport const hasArrayDuplicate = (array: any[]) =>\n  Boolean(getArrayDuplicate(array).length);\n\nexport const getBasePath = () => window.location.pathname;\n","import { Container, Text, Shape, MouseEvent } from 'createjs-module';\nimport { Subject, of } from 'rxjs';\nimport { concatMap, map } from 'rxjs/operators';\n\nimport { IMovement, IDirection, IAxis, ITrackEvents } from 'types';\nimport config from 'const/config';\nimport { getRandom, getVerticalAddOs } from 'utils/helpers';\n\nconst verticalAddOs = getVerticalAddOs();\nexport const createLetter = (letter: string, draggable = true) => {\n  const text = new Text(\n    letter,\n    `${config.letter.size} ${config.letter.font}`,\n    config.letter.color\n  );\n\n  text.textAlign = 'middle';\n\n  text.textBaseline = 'bottom';\n\n  text.x = (config.container.width - text.getBounds().width) / 2;\n  text.y =\n    config.container.height -\n    (config.container.height - text.getBounds().height) +\n    verticalAddOs;\n\n  text.name = letter;\n\n  text.setBounds(0, 0, config.container.width, config.container.height);\n\n  text.color = draggable ? getRandom.color() : '#000';\n\n  const box = createBox(text);\n\n  return box;\n};\n\nexport const createBox = (text: Text) => {\n  const container = new Container();\n\n  const { height } = text.getBounds();\n\n  const rectangle = new Shape();\n  rectangle.graphics\n    .beginFill('#fff')\n    .drawRoundRect(\n      0,\n      0,\n      config.container.width,\n      height,\n      config.container.radius\n    );\n\n  container.name = text.name;\n\n  // rectangle.alpha = 0;\n\n  container.addChild(rectangle, text);\n\n  return container;\n};\n\nexport const createAlpha = (letter: string): Container => {\n  const text = createLetter(letter, false);\n\n  text.alpha = config.letter.alpha;\n\n  return text;\n};\n\nexport const setAlphaLettersPosition = (letters: Container[]): Container[] => {\n  const centerWidth = Math.floor(config.window.width / 2);\n  const centerHeight = Math.floor(config.window.height / 2);\n\n  const totalWidth =\n    config.container.width * letters.length +\n    (letters.length - 1) * config.container.spacer;\n\n  let startLeftPos = centerWidth - config.container.width - totalWidth / 2;\n\n  return letters.map((letter, index) => {\n    const left =\n      startLeftPos + config.container.width + config.container.spacer;\n\n    letter.x = left;\n    letter.y = centerHeight;\n\n    startLeftPos = left;\n\n    return letter;\n  });\n};\n\nconst generateMovement = (): IMovement => {\n  const direction = getRandom.fromTwoValues(\n    IDirection.POSITIVE,\n    IDirection.NEGATIVE\n  );\n  const axis = getRandom.fromTwoValues(IAxis.X, IAxis.Y);\n\n  return { direction, axis };\n};\n\nconst updatePosition = (\n  text: Container,\n  axis: IAxis,\n  direction: IDirection,\n  maxValue: number\n): IDirection => {\n  if (direction === IDirection.POSITIVE) {\n    if (text[axis] + config.speed >= maxValue) {\n      direction = IDirection.NEGATIVE;\n      text[axis] = maxValue;\n      return direction;\n    }\n\n    text[axis] += config.speed;\n\n    return direction;\n  }\n\n  if (text[axis] - config.speed <= 0) {\n    direction = IDirection.POSITIVE;\n    text[axis] = 0;\n    return direction;\n  }\n\n  text[axis] -= config.speed;\n\n  return direction;\n};\n\nconst getMaxRightPos = (maxWidth: number, container: Container) =>\n  maxWidth - container.getBounds().width;\nconst getMaxTopPos = (maxHeight: number, container: Container) =>\n  maxHeight - container.getBounds().height;\n\nexport const setMovement = (text: Container): Function => {\n  let shouldMove = true;\n  let complete = false;\n\n  text.y = getRandom.height(config.window.height);\n  text.x = getRandom.width(config.window.width);\n\n  let { direction, axis } = generateMovement();\n\n  const maxValue =\n    axis === IAxis.Y\n      ? getMaxTopPos(config.window.height, text)\n      : getMaxRightPos(config.window.width, text);\n\n  text.on(ITrackEvents.MOUSEDOWN, () => (shouldMove = false));\n  text.on(ITrackEvents.MOUSEUP, () => (shouldMove = true));\n  text.on(ITrackEvents.TICK, () => {\n    if (complete === false && shouldMove) {\n      direction = updatePosition(text, axis, direction, maxValue);\n    }\n  });\n\n  return () => {\n    complete = true;\n  };\n};\n\ninterface ICenter {\n  centerX: number;\n  centerY: number;\n}\nconst intersects = ({ centerX, centerY }: ICenter, moving: Container) => {\n  const left = moving.x;\n  const top = moving.y;\n  const right = moving.x + moving.getBounds().width;\n  const bottom = moving.y + moving.getBounds().height;\n\n  return (\n    left <= centerX && right >= centerX && top <= centerY && bottom >= centerY\n  );\n};\n\nexport type ISnapCallback = (drop: Container, moving: Container) => any;\n\nexport const setIntersectionObserver = (\n  drop: Container,\n  moving: Container,\n  snapCallback: ISnapCallback\n) => {\n  const centerX = drop.x + drop.getBounds().width / 2;\n  const centerY = drop.y + drop.getBounds().height / 2;\n\n  let completed = false;\n\n  const originalPosition = {\n    x: 0,\n    y: 0,\n  };\n\n  const mouseMove = (e: object) => {\n    if (completed) {\n      return;\n    }\n\n    const event = e as MouseEvent;\n\n    moving.x = event.stageX;\n    moving.y = event.stageY;\n\n    if (intersects({ centerX, centerY }, moving)) {\n      moving.x = drop.x;\n      moving.y = drop.y;\n\n      completed = true;\n      moving.off(ITrackEvents.MOUSEMOVE, mouseMoveRef);\n      moving.off(ITrackEvents.MOUSEDOWN, mouseDownRef);\n    }\n  };\n\n  const mouseUp = (e: object) => {\n    const event = e as MouseEvent;\n\n    moving.x = event.stageX;\n    moving.y = event.stageY;\n\n    if (completed) {\n      moving.x = drop.x;\n      moving.y = drop.y;\n\n      moving.off(ITrackEvents.MOUSEUP, mouseUpRef);\n      speak(moving.name);\n\n      snapCallback(drop, moving);\n      return;\n    }\n\n    moving.x = originalPosition.x;\n    moving.y = originalPosition.y;\n  };\n\n  const mouseDown = () => {\n    originalPosition.x = moving.x;\n    originalPosition.y = moving.y;\n  };\n\n  const mouseDownRef = moving.on(ITrackEvents.MOUSEDOWN, mouseDown);\n  const mouseMoveRef = moving.on(ITrackEvents.MOUSEMOVE, mouseMove);\n  const mouseUpRef = moving.on(ITrackEvents.MOUSEUP, mouseUp);\n\n  return;\n};\n\nconst createMessage = (word: string) => {\n  const message = new SpeechSynthesisUtterance();\n  message.rate = 1;\n  message.pitch = 1;\n  message.volume = 1;\n  message.text = word;\n\n  return message;\n};\nexport const speak = (word: string) =>\n  new Promise((resolve) => {\n    speak$.next({\n      word,\n      resolve,\n    });\n  });\n\nconst speak$ = new Subject();\n\ninterface IVoice {\n  word: string;\n  resolve: Function;\n}\nspeak$\n  .pipe(\n    map((value) => value as IVoice),\n    concatMap(({ word, resolve }) => {\n      const message = createMessage(word);\n      window.speechSynthesis.speak(message);\n\n      message.onend = () => resolve();\n\n      return of(word);\n    })\n  )\n  .subscribe();\n","import { Stage, Ticker, Touch, Container } from 'createjs-module';\n\nimport {\n  setAlphaLettersPosition,\n  setMovement,\n  createAlpha,\n  createLetter,\n  setIntersectionObserver,\n  speak,\n} from './api';\nimport { getRandom } from 'utils/helpers';\nimport { wordsList } from 'const';\nimport { GAME_TYPES } from 'types';\n\nconst newGame = (type: GAME_TYPES, stage: Stage) => {\n  const word =\n    GAME_TYPES.WORDS === type\n      ? getRandom.fromArray(wordsList)\n      : getRandom.numberString(0, 99);\n\n  const letters = word.split('') as string[];\n  const lettersArray = letters.map(createAlpha);\n\n  let lettersComplete = 0;\n\n  let dropInOrder = true;\n  let lastDroppedIndex = -1;\n\n  const isComplete = () => {\n    if (lettersComplete === letters.length) {\n      complete();\n    }\n  };\n\n  const containerLetters = setAlphaLettersPosition(lettersArray).map(\n    (letter) => {\n      stage.addChild(letter);\n\n      return letter;\n    }\n  );\n\n  const movingLetters = letters.map((letter, index) => {\n    const movingText = createLetter(letter) as Container;\n\n    const snapCallback = setMovement(movingText);\n\n    stage.addChild(movingText);\n\n    setIntersectionObserver(\n      containerLetters[index],\n      movingText,\n      (drop, moving) => {\n        const index = containerLetters.findIndex((cont) => cont === drop);\n\n        if (lastDroppedIndex > index) {\n          dropInOrder = false;\n        }\n\n        lastDroppedIndex = index;\n\n        drop.alpha = 1;\n        stage.removeChild(moving);\n\n        snapCallback();\n        lettersComplete++;\n\n        isComplete();\n      }\n    );\n\n    return movingText;\n  });\n\n  const complete = async () => {\n    if (!dropInOrder) {\n      letters.forEach(speak);\n    }\n\n    await speak(word);\n\n    containerLetters.forEach((letter) => stage.removeChild(letter));\n    movingLetters.forEach((letter) => stage.removeChild(letter));\n\n    newGame(type, stage);\n  };\n};\n\nfunction init(type: GAME_TYPES) {\n  const stage = new Stage('canvas');\n\n  Touch.enable(stage);\n\n  newGame(type, stage);\n\n  // Tween.get(circle, { loop: true })\n  //   .to({ x: 400 }, 1000, Ease.getPowInOut(4))\n  //   .to({ alpha: 0, y: 175 }, 500, Ease.getPowInOut(2))\n  //   .to({ alpha: 0, y: 225 }, 100)\n  //   .to({ alpha: 1, y: 200 }, 500, Ease.getPowInOut(2))\n  //   .to({ x: 100 }, 800, Ease.getPowInOut(2));\n\n  Ticker.setFPS(60);\n  Ticker.addEventListener('tick', stage);\n}\n\nexport default init;\n","import { useLayoutEffect } from 'react';\n\nimport initProgram from 'app/program';\n\nimport { GAME_TYPES } from 'types';\nimport config from 'const/config';\n\nexport default (\n  type: GAME_TYPES,\n  canvasRef: React.RefObject<HTMLCanvasElement>\n) => {\n  useLayoutEffect(() => {\n    if (canvasRef.current) {\n      const body = document.querySelector('body');\n\n      if (body) {\n        const { height, width } = body.getBoundingClientRect();\n\n        Object.assign(config.window, { height, width });\n\n        canvasRef.current.height = height;\n        canvasRef.current.width = width;\n      }\n    }\n\n    initProgram(type);\n  }, []);\n\n  return;\n};\n","import React, { useRef, useCallback, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { css } from 'emotion';\n\nimport Button from '@material-ui/core/Button';\n\nimport { GAME_TYPES } from 'types';\nimport useGame from 'hooks/useGame';\n\nexport default () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const dispatch = useDispatch();\n\n  const onClick = useCallback(() => {\n    dispatch(push('/'));\n  }, [dispatch]);\n\n  useGame(GAME_TYPES.WORDS, canvasRef);\n\n  return (\n    <>\n      <canvas id=\"canvas\" ref={canvasRef} />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onClick}\n        className={buttonStyle}\n      >\n        Home\n      </Button>\n    </>\n  );\n};\n\nconst buttonStyle = css`\n  position: absolute !important;\n  top: 1em;\n  right: 1em;\n`;\n","import React, { useRef, useCallback, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { css } from 'emotion';\n\nimport Button from '@material-ui/core/Button';\n\nimport { GAME_TYPES } from 'types';\nimport useGame from 'hooks/useGame';\n\nexport default () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const dispatch = useDispatch();\n\n  const onClick = useCallback(() => {\n    dispatch(push('/'));\n  }, [dispatch]);\n\n  useGame(GAME_TYPES.NUMBERS, canvasRef);\n\n  return (\n    <>\n      <canvas id=\"canvas\" ref={canvasRef} />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onClick}\n        className={buttonStyle}\n      >\n        Home\n      </Button>\n    </>\n  );\n};\n\nconst buttonStyle = css`\n  position: absolute !important;\n  top: 1em;\n  right: 1em;\n`;\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport Home from 'containers/home';\r\nimport Words from 'containers/words';\r\nimport Numbers from 'containers/numbers';\r\n\r\nimport { getBasePath } from 'utils/helpers';\r\n\r\ninterface IPage {\r\n  exact?: boolean;\r\n  path: string;\r\n  component: React.ComponentClass<any, any> | React.FunctionComponent<any>;\r\n}\r\n\r\nconst basePath = getBasePath();\r\n\r\nconst routes: IPage[] = [\r\n  {\r\n    path: `/numbers`,\r\n    component: Numbers,\r\n  },\r\n  {\r\n    path: `/words`,\r\n    component: Words,\r\n  },\r\n  {\r\n    exact: true,\r\n    path: basePath,\r\n    component: Home,\r\n  },\r\n];\r\n\r\nexport default () => (\r\n  <>\r\n    {routes.map((route) => (\r\n      <Route key={route.path} {...route} />\r\n    ))}\r\n  </>\r\n);\r\n","import React from 'react';\nimport Routes from 'app/routes';\n\nexport type IEventCallbackVoid = (event: any) => void;\ninterface IAppContext {}\n\nexport const AppContext = React.createContext<IAppContext>({});\n\nconst App: React.FC = () => {\n  return (\n    <AppContext.Provider value={{}}>\n      <Routes />\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { store, history } from 'app/store';\n\nimport ErrorBoundary from './containers/errorboundary';\nimport Loader from 'containers/loader';\n\nimport App from './App';\n\nimport './index.css';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { getBasePath } from 'utils/helpers';\n\nconst _window = window as any;\n\n_window.oncontextmenu = () => false;\n_window.selectstart = () => false;\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <BrowserRouter basename={getBasePath()}>\n        <Provider store={store}>\n          <ConnectedRouter history={history}>\n            <Suspense fallback={<Loader />}>\n              <App />\n            </Suspense>\n          </ConnectedRouter>\n        </Provider>\n      </BrowserRouter>\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}